<?php

namespace App\Database;

class SqlErrorCode
{
    public const ER_HASHCHK                                                       = 1000;                                // hashchk
    public const ER_NISAMCHK                                                      = 1001;                               // isamchk
    public const ER_NO                                                            = 1002;                                     // NO
    public const ER_YES                                                           = 1003;                                    // YES
    public const ER_CANT_CREATE_FILE                                              = 1004;                       // Can't create file
    public const ER_CANT_CREATE_TABLE                                             = 1005;                      // Can't create table
    public const ER_CANT_CREATE_DB                                                = 1006;                         // Can't create database
    public const ER_DB_CREATE_EXISTS                                              = 1007;                       // Can't create database as it already exists
    public const ER_DB_DROP_EXISTS                                                = 1008;                         // Can't drop database as it doesn't exist
    public const ER_DB_DROP_DELETE                                                = 1009;                         // Error dropping database (can't delete file)
    public const ER_DB_DROP_RMDIR                                                 = 1010;                          // Error dropping database (can't rmdir directory)
    public const ER_CANT_DELETE_FILE                                              = 1011;                       // Error deleting file
    public const ER_CANT_FIND_SYSTEM_REC                                          = 1012;                   // Can't read record in system table
    public const ER_CANT_GET_STAT                                                 = 1013;                          // Can't get status of file
    public const ER_CANT_GET_WD                                                   = 1014;                            // Can't get working directory
    public const ER_CANT_LOCK                                                     = 1015;                              // Can't lock file
    public const ER_CANT_OPEN_FILE                                                = 1016;                         // Can't open file
    public const ER_FILE_NOT_FOUND                                                = 1017;                         // Can't find file as it doesn't exist
    public const ER_CANT_READ_DIR                                                 = 1018;                          // Can't read dir
    public const ER_CANT_SET_WD                                                   = 1019;                            // Can't change dir
    public const ER_CHECKREAD                                                     = 1020;                              // Record has changed since last read
    public const ER_DISK_FULL                                                     = 1021;                              // Disk full
    public const ER_DUP_KEY                                                       = 1022;                                // Can't write, duplicate key in table
    public const ER_ERROR_ON_CLOSE                                                = 1023;                         // Error on close of file
    public const ER_ERROR_ON_READ                                                 = 1024;                          // Error reading file
    public const ER_ERROR_ON_RENAME                                               = 1025;                        // Error on rename of file
    public const ER_ERROR_ON_WRITE                                                = 1026;                         // Error writing file
    public const ER_FILE_USED                                                     = 1027;                              // File is locked against change
    public const ER_FILSORT_ABORT                                                 = 1028;                          // Sort aborted
    public const ER_FORM_NOT_FOUND                                                = 1029;                         // View doesn't exist
    public const ER_GET_ERRNO                                                     = 1030;                              // Got error from table handler
    public const ER_ILLEGAL_HA                                                    = 1031;                             // Table handler doesn't have this option
    public const ER_KEY_NOT_FOUND                                                 = 1032;                          // Can't find record
    public const ER_NOT_FORM_FILE                                                 = 1033;                          // Incorrect information in form file
    public const ER_NOT_KEYFILE                                                   = 1034;                            // Incorrect key file for table
    public const ER_OLD_KEYFILE                                                   = 1035;                            // Old key file for table
    public const ER_OPEN_AS_READONLY                                              = 1036;                       // Table is read only
    public const ER_OUTOFMEMORY                                                   = 1037;                            // Out of memory
    public const ER_OUT_OF_SORTMEMORY                                             = 1038;                      // Out of sort memory. Increase daemon sort buffer size
    public const ER_UNEXPECTED_EOF                                                = 1039;                         // Unexpected eof found when reading file
    public const ER_CON_COUNT_ERROR                                               = 1040;                        // Too many connections
    public const ER_OUT_OF_RESOURCES                                              = 1041;                       // Out of memory
    public const ER_BAD_HOST_ERROR                                                = 1042;                         // Can't get hostname for your address
    public const ER_HANDSHAKE_ERROR                                               = 1043;                        // Bad handshake
    public const ER_DBACCESS_DENIED_ERROR                                         = 1044;                  // Access denied for user to database
    public const ER_ACCESS_DENIED_ERROR                                           = 1045;                    // Access denied for user to server
    public const ER_NO_DB_ERROR                                                   = 1046;                            // No Database Selected
    public const ER_UNKNOWN_COM_ERROR                                             = 1047;                      // Unknown command
    public const ER_BAD_NULL_ERROR                                                = 1048;                         // Column cannot be null
    public const ER_BAD_DB_ERROR                                                  = 1049;                           // Unknown database
    public const ER_TABLE_EXISTS_ERROR                                            = 1050;                     // Table already exists
    public const ER_BAD_TABLE_ERROR                                               = 1051;                        // Unknown table
    public const ER_NON_UNIQ_ERROR                                                = 1052;                         // Column: is ambiguous
    public const ER_SERVER_SHUTDOWN                                               = 1053;                        // Server shutdown in progress
    public const ER_BAD_FIELD_ERROR                                               = 1054;                        // Unknown column
    public const ER_WRONG_FIELD_WITH_GROUP                                        = 1055;                 // Field isn't in GROUP BY
    public const ER_WRONG_GROUP_FIELD                                             = 1056;                      // Can't group on field
    public const ER_WRONG_SUM_SELECT                                              = 1057;                       // Statement has sum functions and columns in same statement
    public const ER_WRONG_VALUE_COUNT                                             = 1058;                      // Column count doesn't match value count
    public const ER_TOO_LONG_IDENT                                                = 1059;                         // Identifier name is too long
    public const ER_DUP_FIELDNAME                                                 = 1060;                          // Duplicate column name
    public const ER_DUP_KEYNAME                                                   = 1061;                            // Duplicate key name
    public const ER_DUP_ENTRY                                                     = 1062;                              // Duplicate entry
    public const ER_WRONG_FIELD_SPEC                                              = 1063;                       // Incorrect column specifier
    public const ER_PARSE_ERROR                                                   = 1064;                            // Parse error
    public const ER_EMPTY_QUERY                                                   = 1065;                            // Query was empty
    public const ER_NONUNIQ_TABLE                                                 = 1066;                          // Not unique table/alias
    public const ER_INVALID_DEFAULT                                               = 1067;                        // Invalid default value
    public const ER_MULTIPLE_PRI_KEY                                              = 1068;                       // Multiple primary key defined
    public const ER_TOO_MANY_KEYS                                                 = 1069;                          // Too many keys specified
    public const ER_TOO_MANY_KEY_PARTS                                            = 1070;                     // Too many key parts specified
    public const ER_TOO_LONG_KEY                                                  = 1071;                           // Specified key was too long
    public const ER_KEY_COLUMN_DOES_NOT_EXITS                                     = 1072;              // Key column doesn't exist in table
    public const ER_BLOB_USED_AS_KEY                                              = 1073;                       // BLOB column can't be used in key specification with the used table type
    public const ER_TOO_BIG_FIELDLENGTH                                           = 1074;                    // Column length is too big
    public const ER_WRONG_AUTO_KEY                                                = 1075;                         // Incorrect table definition; There can only be one auto column and it must be defined as a key
    public const ER_READY                                                         = 1076;                                  // Server ready for connections
    public const ER_NORMAL_SHUTDOWN                                               = 1077;                        // Normal shutdown
    public const ER_GOT_SIGNAL                                                    = 1078;                             // Got fatal signal. Aborting!
    public const ER_SHUTDOWN_COMPLETE                                             = 1079;                      // Shutdown Complete
    public const ER_FORCING_CLOSE                                                 = 1080;                          // Forcing close of thread
    public const ER_IPSOCK_ERROR                                                  = 1081;                           // Can't create IP socket
    public const ER_NO_SUCH_INDEX                                                 = 1082;                          // Table has no index like the one used in CREATE INDEX
    public const ER_WRONG_FIELD_TERMINATORS                                       = 1083;                // Field separator argument is not what is expected. Check the manual
    public const ER_BLOBS_AND_NO_TERMINATED                                       = 1084;                // You can't use fixed rowlength with BLOBs. Please use 'fields terminated by'.
    public const ER_TEXTFILE_NOT_READABLE                                         = 1085;                  // File must be in the database directory or be readable by all
    public const ER_FILE_EXISTS_ERROR                                             = 1086;                      // File already exists
    public const ER_LOAD_INFO                                                     = 1087;                              // Informational message
    public const ER_ALTER_INFO                                                    = 1088;                             // Informational message for ALTER
    public const ER_WRONG_SUB_KEY                                                 = 1089;                          // Incorrect sub part key.
    public const ER_CANT_REMOVE_ALL_FIELDS                                        = 1090;                 // You can't delete all columns with ALTER TABLE. Use DROP TABLE instead
    public const ER_CANT_DROP_FIELD_OR_KEY                                        = 1091;                 // Can't DROP column/key
    public const ER_INSERT_INFO                                                   = 1092;                            // Informational message for INSERT
    public const ER_INSERT_TABLE_USED                                             = 1093;                      // INSERT TABLE isn't allowed in FROM table list
    public const ER_NO_SUCH_THREAD                                                = 1094;                         // Unknown thread
    public const ER_KILL_DENIED_ERROR                                             = 1095;                      // You are not owner of thread
    public const ER_NO_TABLES_USED                                                = 1096;                         // No tables used
    public const ER_TOO_BIG_SET                                                   = 1097;                            // Too many strings with SET
    public const ER_NO_UNIQUE_LOGFILE                                             = 1098;                      // Can't generate a unique log-filename
    public const ER_TABLE_NOT_LOCKED_FOR_WRITE                                    = 1099;             // Table was locked with a READ lock and can't be updated
    public const ER_TABLE_NOT_LOCKED                                              = 1100;                       // Table was not locked with LOCK TABLES
    public const ER_BLOB_CANT_HAVE_DEFAULT                                        = 1101;                 // BLOB column can't have a default value
    public const ER_WRONG_DB_NAME                                                 = 1102;                          // Incorrect database name
    public const ER_WRONG_TABLE_NAME                                              = 1103;                       // Incorrect table name
    public const ER_TOO_BIG_SELECT                                                = 1104;                         // The SELECT would examine too many records and probably take a very long time. Check your WHERE and use SET OPTION SQL_BIG_SELECTS=1 if the SELECT is ok
    public const ER_UNKNOWN_ERROR                                                 = 1105;                          // Unknown error
    public const ER_UNKNOWN_PROCEDURE                                             = 1106;                      // Unknown procedure
    public const ER_WRONG_PARAMCOUNT_TO_PROCEDURE                                 = 1107;          // Incorrect parameter count to procedure
    public const ER_WRONG_PARAMETERS_TO_PROCEDURE                                 = 1108;          // Incorrect parameters to procedure
    public const ER_UNKNOWN_TABLE                                                 = 1109;                          // Unknown table
    public const ER_FIELD_SPECIFIED_TWICE                                         = 1110;                  // Column specified twice
    public const ER_INVALID_GROUP_FUNC_USE                                        = 1111;                 // Invalid use of group function
    public const ER_UNSUPPORTED_EXTENSION                                         = 1112;                  // Table uses an extension that doesn't exist in this MySQL version
    public const ER_TABLE_MUST_HAVE_COLUMNS                                       = 1113;                // A table must have at least 1 column
    public const ER_RECORD_FILE_FULL                                              = 1114;                       // The table is full
    public const ER_UNKNOWN_CHARACTER_SET                                         = 1115;                  // Unknown character set
    public const ER_TOO_MANY_TABLES                                               = 1116;                        // Too many tables
    public const ER_TOO_MANY_FIELDS                                               = 1117;                        // Too many columns
    public const ER_TOO_BIG_ROWSIZE                                               = 1118;                        // Too big row size
    public const ER_STACK_OVERRUN                                                 = 1119;                          // Thread stack overrun
    public const ER_WRONG_OUTER_JOIN                                              = 1120;                       // Cross dependency found in OUTER JOIN
    public const ER_NULL_COLUMN_IN_INDEX                                          = 1121;                   // Column is used with UNIQUE or INDEX but is not defined as NOT NULL
    public const ER_CANT_FIND_UDF                                                 = 1122;                          // Can't load function
    public const ER_CANT_INITIALIZE_UDF                                           = 1123;                    // Can't initialize function
    public const ER_UDF_NO_PATHS                                                  = 1124;                           // No paths allowed for shared library
    public const ER_UDF_EXISTS                                                    = 1125;                             // Function already exist
    public const ER_CANT_OPEN_LIBRARY                                             = 1126;                      // Can't open shared library
    public const ER_CANT_FIND_DL_ENTRY                                            = 1127;                     // Can't find function in library
    public const ER_FUNCTION_NOT_DEFINED                                          = 1128;                   // Function is not defined
    public const ER_HOST_IS_BLOCKED                                               = 1129;                        // Host is blocked because of many connection errors
    public const ER_HOST_NOT_PRIVILEGED                                           = 1130;                    // Host is not allowed to connect to this MySQL server
    public const ER_PASSWORD_ANONYMOUS_USER                                       = 1131;                // You are using MySQL as an anonymous users and anonymous users are not allowed to change passwords
    public const ER_PASSWORD_NOT_ALLOWED                                          = 1132;                   // You must have privileges to update tables in the mysql database to be able to change passwords for others
    public const ER_PASSWORD_NO_MATCH                                             = 1133;                      // Can't find any matching row in the user table
    public const ER_UPDATE_INFO                                                   = 1134;                            // Informational message for UPDATE
    public const ER_CANT_CREATE_THREAD                                            = 1135;                     // Can't create a new thread
    public const ER_WRONG_VALUE_COUNT_ON_ROW                                      = 1136;               // Column count doesn't match value count
    public const ER_CANT_REOPEN_TABLE                                             = 1137;                      // Can't reopen table
    public const ER_INVALID_USE_OF_NULL                                           = 1138;                    // Invalid use of NULL value
    public const ER_REGEXP_ERROR                                                  = 1139;                           // Got error from regexp
    public const ER_MIX_OF_GROUP_FUNC_AND_FIELDS                                  = 1140;           // Mixing of GROUP columns (MIN(),MAX(),COUNT()...) with no GROUP columns is illegal if there is no GROUP BY clause
    public const ER_NONEXISTING_GRANT                                             = 1141;                      // There is no such grant defined for user+host
    public const ER_TABLEACCESS_DENIED_ERROR                                      = 1142;               // Command denied to user for table
    public const ER_COLUMNACCESS_DENIED_ERROR                                     = 1143;              // Command denied to user for column
    public const ER_ILLEGAL_GRANT_FOR_TABLE                                       = 1144;                // Illegal GRANT/REVOKE command. Please consult the manual which privileges can be used.
    public const ER_GRANT_WRONG_HOST_OR_USER                                      = 1145;               // The host or user argument to GRANT is too long
    public const ER_NO_SUCH_TABLE                                                 = 1146;                          // Table doesn't exist
    public const ER_NONEXISTING_TABLE_GRANT                                       = 1147;                // There is no such grant defined for user+host on table
    public const ER_NOT_ALLOWED_COMMAND                                           = 1148;                    // The used command is not allowed with this MySQL version
    public const ER_SYNTAX_ERROR                                                  = 1149;                           // You have an error in your SQL syntax.  Check the manual that corresponds to your MySQL server version for the right syntax to use
    public const ER_DELAYED_CANT_CHANGE_LOCK                                      = 1150;               // Delayed insert thread couldn't get requested lock for table
    public const ER_TOO_MANY_DELAYED_THREADS                                      = 1151;               // Too many delayed threads in use
    public const ER_ABORTING_CONNECTION                                           = 1152;                    // Aborted connection to db
    public const ER_NET_PACKET_TOO_LARGE                                          = 1153;                   // Got a packet bigger than 'max_allowed_packet'
    public const ER_NET_READ_ERROR_FROM_PIPE                                      = 1154;               // Got a read error from the connection pipe
    public const ER_NET_FCNTL_ERROR                                               = 1155;                        // Got an error from fcntl()
    public const ER_NET_PACKETS_OUT_OF_ORDER                                      = 1156;               // Got packets out of order
    public const ER_NET_UNCOMPRESS_ERROR                                          = 1157;                   // Couldn't uncompress communication packet
    public const ER_NET_READ_ERROR                                                = 1158;                         // Got an error reading communication packets
    public const ER_NET_READ_INTERRUPTED                                          = 1159;                   // Got timeout reading communication packets
    public const ER_NET_ERROR_ON_WRITE                                            = 1160;                     // Got an error writing communication packets
    public const ER_NET_WRITE_INTERRUPTED                                         = 1161;                  // Got timeout writing communication packets
    public const ER_TOO_LONG_STRING                                               = 1162;                        // Result string is longer than max_allowed_packet
    public const ER_TABLE_CANT_HANDLE_BLOB                                        = 1163;                 // The used table type doesn't support BLOB                                                                                                                                                TEXT columns
    public const ER_TABLE_CANT_HANDLE_AUTO_INCREMENT                              = 1164;       // The used table type doesn't support AUTO_INCREMENT columns
    public const ER_DELAYED_INSERT_TABLE_LOCKED                                   = 1165;            // INSERT DELAYED can't be used with locked table
    public const ER_WRONG_COLUMN_NAME                                             = 1166;                      // Incorrect column name
    public const ER_WRONG_KEY_COLUMN                                              = 1167;                       // The used table handler can't index column
    public const ER_WRONG_MRG_TABLE                                               = 1168;                        // All tables in the MERGE table are not identically defined
    public const ER_DUP_UNIQUE                                                    = 1169;                             // Can't write, because of unique constraint, to table
    public const ER_BLOB_KEY_WITHOUT_LENGTH                                       = 1170;                // BLOB column used in key specification without a key length
    public const ER_PRIMARY_CANT_HAVE_NULL                                        = 1171;                 // All parts of a PRIMARY KEY must be NOT NULL;  If you need NULL in a key, use UNIQUE instead
    public const ER_TOO_MANY_ROWS                                                 = 1172;                          // Result consisted of more than one row
    public const ER_REQUIRES_PRIMARY_KEY                                          = 1173;                   // This table type requires a primary key
    public const ER_NO_RAID_COMPILED                                              = 1174;                       // This version of MySQL is not compiled with RAID support
    public const ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE                               = 1175;        // You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column
    public const ER_KEY_DOES_NOT_EXITS                                            = 1176;                     // Key doesn't exist in table
    public const ER_CHECK_NO_SUCH_TABLE                                           = 1177;                    // Can't open table
    public const ER_CHECK_NOT_IMPLEMENTED                                         = 1178;                  // The handler for the table doesn't support operation
    public const ER_CANT_DO_THIS_DURING_AN_TRANSACTION                            = 1179;     // You are not allowed to execute this command in a transaction
    public const ER_ERROR_DURING_COMMIT                                           = 1180;                    // Got error during COMMIT
    public const ER_ERROR_DURING_ROLLBACK                                         = 1181;                  // Got error during ROLLBACK
    public const ER_ERROR_DURING_FLUSH_LOGS                                       = 1182;                // Got error during FLUSH_LOGS
    public const ER_ERROR_DURING_CHECKPOINT                                       = 1183;                // Got error during CHECKPOINT
    public const ER_NEW_ABORTING_CONNECTION                                       = 1184;                // Aborted connection to db
    public const ER_DUMP_NOT_IMPLEMENTED                                          = 1185;                   // The handler for the table does not support binary table dump
    public const ER_FLUSH_MASTER_BINLOG_CLOSED                                    = 1186;             // Binlog closed, cannot RESET MASTER
    public const ER_INDEX_REBUILD                                                 = 1187;                          // Failed rebuilding the index of dumped table
    public const ER_MASTER                                                        = 1188;                                 // Error from master
    public const ER_MASTER_NET_READ                                               = 1189;                        // Net error reading from master
    public const ER_MASTER_NET_WRITE                                              = 1190;                       // Net error writing to master
    public const ER_FT_MATCHING_KEY_NOT_FOUND                                     = 1191;              // Can't find FULLTEXT index matching the column list
    public const ER_LOCK_OR_ACTIVE_TRANSACTION                                    = 1192;             // Can't execute the given command because you have active locked tables or an active transaction
    public const ER_UNKNOWN_SYSTEM_VARIABLE                                       = 1193;                // Unknown system variable
    public const ER_CRASHED_ON_USAGE                                              = 1194;                       // Table is marked as crashed and should be repaired
    public const ER_CRASHED_ON_REPAIR                                             = 1195;                      // Table is marked as crashed and last (automatic?) repair failed
    public const ER_WARNING_NOT_COMPLETE_ROLLBACK                                 = 1196;          // Warning:  Some non-transactional changed tables couldn't be rolled back
    public const ER_TRANS_CACHE_FULL                                              = 1197;                       // Multi-statement transaction required more than 'max_binlog_cache_size' bytes of storage. Increase this mysqld variable and try again',
    public const ER_SLAVE_MUST_STOP                                               = 1198;                        // This operation cannot be performed with a running slave, run SLAVE STOP first
    public const ER_SLAVE_NOT_RUNNING                                             = 1199;                      // This operation requires a running slave, configure slave and do SLAVE START
    public const ER_BAD_SLAVE                                                     = 1200;                              // The server is not configured as slave, fix in config file or with CHANGE MASTER TO
    public const ER_MASTER_INFO                                                   = 1201;                            // Could not initialize master info structure, check permisions on master.info
    public const ER_SLAVE_THREAD                                                  = 1202;                           // Could not create slave thread, check system resources
    public const ER_TOO_MANY_USER_CONNECTIONS                                     = 1203;              // User has already more than 'max_user_connections' active connections
    public const ER_SET_CONSTANTS_ONLY                                            = 1204;                     // You may only use constant expressions with SET
    public const ER_LOCK_WAIT_TIMEOUT                                             = 1205;                      // Lock wait timeout exceeded; Try restarting transaction
    public const ER_LOCK_TABLE_FULL                                               = 1206;                        // The total number of locks exceeds the lock table size
    public const ER_READ_ONLY_TRANSACTION                                         = 1207;                  // Update locks cannot be acquired during a READ UNCOMMITTED transaction
    public const ER_DROP_DB_WITH_READ_LOCK                                        = 1208;                 // DROP DATABASE not allowed while thread is holding global read lock
    public const ER_CREATE_DB_WITH_READ_LOCK                                      = 1209;               // CREATE DATABASE not allowed while thread is holding global read lock
    public const ER_WRONG_ARGUMENTS                                               = 1210;                        // Wrong arguments
    public const ER_NO_PERMISSION_TO_CREATE_USER                                  = 1211;           // Current user is not allowed to create new users
    public const ER_UNION_TABLES_IN_DIFFERENT_DIR                                 = 1212;          // Incorrect table definition; All MERGE tables must be in the same database
    public const ER_LOCK_DEADLOCK                                                 = 1213;                          // Deadlock found when trying to get lock; Try restarting transaction
    public const ER_TABLE_CANT_HANDLE_FULLTEXT                                    = 1214;             // The used table type doesn't support FULLTEXT indexes
    public const ER_CANNOT_ADD_FOREIGN                                            = 1215;                     // Cannot add foreign key constraint
    public const ER_NO_REFERENCED_ROW                                             = 1216;                      // Cannot add a child row: a foreign key constraint fails
    public const ER_ROW_IS_REFERENCED                                             = 1217;                      // Cannot delete a parent row: a foreign key constraint fails
    public const ER_CONNECT_TO_MASTER                                             = 1218;                      // Error connecting to master
    public const ER_QUERY_ON_MASTER                                               = 1219;                        // Error running query on master
    public const ER_ERROR_WHEN_EXECUTING_COMMAND                                  = 1220;           // Error when executing command
    public const ER_WRONG_USAGE                                                   = 1221;                            // Syntax error: Wrong usage
    public const ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT                             = 1222;      // The used SELECT statements have a different number of columns
    public const ER_CANT_UPDATE_WITH_READLOCK                                     = 1223;              // Can't execute the query because you have a conflicting read lock
    public const ER_MIXING_NOT_ALLOWED                                            = 1224;                     // Mixing of transactional and non-transactional tables is disabled
    public const ER_DUP_ARGUMENT                                                  = 1225;                           // Option used twice in statement
    public const ER_USER_LIMIT_REACHED                                            = 1226;                     // User has exceeded a resource limit
    public const ER_SPECIFIC_ACCESS_DENIED_ERROR                                  = 1227;           // Access denied due to missing privilege
    public const ER_LOCAL_VARIABLE                                                = 1228;                         // Variable is a LOCAL variable and can't be used with SET GLOBAL
    public const ER_GLOBAL_VARIABLE                                               = 1229;                        // Variable is a GLOBAL variable and should be set with SET GLOBAL
    public const ER_NO_DEFAULT                                                    = 1230;                             // Variable doesn't have a default value
    public const ER_WRONG_VALUE_FOR_VAR                                           = 1231;                    // Variable can't be set to that value
    public const ER_WRONG_TYPE_FOR_VAR                                            = 1232;                     // Wrong argument type for variable
    public const ER_VAR_CANT_BE_READ                                              = 1233;                       // Variable can only be set, not read
    public const ER_CANT_USE_OPTION_HERE                                          = 1234;                   // Incorrect usage/placement of option
    public const ER_NOT_SUPPORTED_YET                                             = 1235;                      // This version of MySQL doesn't yet support operation
    public const ER_MASTER_FATAL_ERROR_READING_BINLOG                             = 1236;      // Got fatal error from master when reading data from binary log
    public const ER_SLAVE_IGNORED_TABLE                                           = 1237;               // Slave SQL thread ignored the query because of replicate-*-table rules
    public const ER_INCORRECT_GLOBAL_LOCAL_VAR                                    = 1238;        // Variable is a incorrect kind of variable
    public const ER_WRONG_FK_DEF                                                  = 1239;                      // Incorrect foreign key definition
    public const ER_KEY_REF_DO_NOT_MATCH_TABLE_REF                                = 1240;    // Key reference and table reference don't match
    public const ER_OPERAND_COLUMNS                                               = 1241;                   // Operand should contain N column(s)
    public const ER_SUBQUERY_NO_1_ROW                                             = 1242;                 // Subquery returns more than 1 row
    public const ER_UNKNOWN_STMT_HANDLER                                          = 1243;              // Unknown prepared statement handler
    public const ER_CORRUPT_HELP_DB                                               = 1244;                   // Help database is corrupt or does not exist
    public const ER_AUTO_CONVERT                                                  = 1246;                      // Error converting column
    public const ER_ILLEGAL_REFERENCE                                             = 1247;                 // Reference not supported
    public const ER_DERIVED_MUST_HAVE_ALIAS                                       = 1248;           // Every derived table must have its own alias
    public const ER_SELECT_REDUCED                                                = 1249;                    // Select was reduced during optimization
    public const ER_TABLENAME_NOT_ALLOWED_HERE                                    = 1250;        // A table from one of the SELECTs cannot be used
    public const ER_NOT_SUPPORTED_AUTH_MODE                                       = 1251;           // Client does not support authentication protocol requested by server; consider upgrading MySQL client
    public const ER_SPATIAL_CANT_HAVE_NULL                                        = 1252;            // All parts of a SPATIAL index must be NOT NULL
    public const ER_COLLATION_CHARSET_MISMATCH                                    = 1253;        // COLLATION is not valid for CHARACTER SET
    public const ER_TOO_BIG_FOR_UNCOMPRESS                                        = 1256;            // Uncompressed data size too large
    public const ER_ZLIB_Z_MEM_ERROR                                              = 1257;                  // ZLIB: Not enough memory
    public const ER_ZLIB_Z_BUF_ERROR                                              = 1258;                  // ZLIB: Not enough room in the output buffer (probably, length of uncompressed data was corrupted)
    public const ER_ZLIB_Z_DATA_ERROR                                             = 1259;                 // ZLIB: Input data corrupted
    public const ER_CUT_VALUE_GROUP_CONCAT                                        = 1260;            // Row was cut by GROUP_CONCAT()
    public const ER_WARN_TOO_FEW_RECORDS                                          = 1261;              // Row doesn't contain data for all columns
    public const ER_WARN_TOO_MANY_RECORDS                                         = 1262;             // Row was truncated; it contained more data than there were input columns
    public const ER_WARN_NULL_TO_NOTNULL                                          = 1263;              // Column set to default value; NULL supplied to NOT NULL column
    public const ER_WARN_DATA_OUT_OF_RANGE                                        = 1264;            // Out of range value for column
    public const WARN_DATA_TRUNCATED                                              = 1265;                  // Data truncated for column
    public const ER_WARN_USING_OTHER_HANDLER                                      = 1266;          // Using different storage engine for this table
    public const ER_CANT_AGGREGATE_2COLLATIONS                                    = 1267;        // Illegal mix of collations for operation
    public const ER_REVOKE_GRANTS                                                 = 1269;                     // Can't revoke all privileges for one or more of the requested users
    public const ER_CANT_AGGREGATE_3COLLATIONS                                    = 1270;        // Illegal mix of collations for operation
    public const ER_CANT_AGGREGATE_NCOLLATIONS                                    = 1271;        // Illegal mix of collations for operation
    public const ER_VARIABLE_IS_NOT_STRUCT                                        = 1272;            // Variable is not a variable component (can't be used as XXXX.variable_name)
    public const ER_UNKNOWN_COLLATION                                             = 1273;                 // Unknown collation
    public const ER_SLAVE_IGNORED_SSL_PARAMS                                      = 1274;          // SSL parameters in CHANGE MASTER are ignored because this MySQL slave was compiled without SSL support; they can be used later if MySQL slave with SSL is started
    public const ER_SERVER_IS_IN_SECURE_AUTH_MODE                                 = 1275;     // Server is running in --secure-auth mode, but user has a password in the old format; please change the password to the new format
    public const ER_WARN_FIELD_RESOLVED                                           = 1276;               // Field or reference of SELECT was resolved in another SELECT
    public const ER_BAD_SLAVE_UNTIL_COND                                          = 1277;              // Incorrect parameter or combination of parameters for START SLAVE UNTIL
    public const ER_MISSING_SKIP_SLAVE                                            = 1278;                // It is recommended to use --skip-replica-start when doing step-by-step replication with START SLAVE UNTIL; otherwise, you will get problems if you get an unexpected slave's mysqld restart
    public const ER_UNTIL_COND_IGNORED                                            = 1279;                // SQL thread is not to be started so UNTIL options are ignored
    public const ER_WRONG_NAME_FOR_INDEX                                          = 1280;              // Incorrect index name
    public const ER_WRONG_NAME_FOR_CATALOG                                        = 1281;            // Incorrect catalog name
    public const ER_WARN_QC_RESIZE                                                = 1282;                    // Query cache failed to set size
    public const ER_BAD_FT_COLUMN                                                 = 1283;                     // A column cannot be part of FULLTEXT index
    public const ER_UNKNOWN_KEY_CACHE                                             = 1284;                 // Unknown key cache
    public const ER_WARN_HOSTNAME_WONT_WORK                                       = 1285;           // MySQL is started in --skip-name-resolve mode; you must restart it without this switch for this grant to work
    public const ER_UNKNOWN_STORAGE_ENGINE                                        = 1286;            // Unknown storage engine
    public const ER_WARN_DEPRECATED_SYNTAX                                        = 1287;            // Syntax is deprecated and will be removed in a future release.
    public const ER_NON_UPDATABLE_TABLE                                           = 1288;               // The target table is not updatable
    public const ER_FEATURE_DISABLED                                              = 1289;                  // This feature is disabled
    public const ER_OPTION_PREVENTS_STATEMENT                                     = 1290;         // The MySQL server is running with an option that means it cannot execute this statement
    public const ER_DUPLICATED_VALUE_IN_TYPE                                      = 1291;          // A column has duplicated value
    public const ER_TRUNCATED_WRONG_VALUE                                         = 1292;             // Truncated incorrect value
    public const ER_INVALID_ON_UPDATE                                             = 1294;                 // Invalid ON UPDATE clause for column
    public const ER_UNSUPPORTED_PS                                                = 1295;                    // This command is not supported in the prepared statement protocol yet
    public const ER_GET_ERRMSG                                                    = 1296;                        // Got error from underlying subsystem
    public const ER_GET_TEMPORARY_ERRMSG                                          = 1297;              // Got temporary error from underlying subsystem
    public const ER_UNKNOWN_TIME_ZONE                                             = 1298;                 // Unknown or incorrect time zone
    public const ER_WARN_INVALID_TIMESTAMP                                        = 1299;            // Invalid TIMESTAMP value
    public const ER_INVALID_CHARACTER_STRING                                      = 1300;          // Invalid character string
    public const ER_WARN_ALLOWED_PACKET_OVERFLOWED                                = 1301;    // Result was larger than max_allowed_packet and was truncated
    public const ER_CONFLICTING_DECLARATIONS                                      = 1302;          // Conflicting declarations
    public const ER_SP_NO_RECURSIVE_CREATE                                        = 1303;            // Can't create entity from within another stored routine
    public const ER_SP_ALREADY_EXISTS                                             = 1304;                 // Entity already exists
    public const ER_SP_DOES_NOT_EXIST                                             = 1305;                 // Entity does not exist
    public const ER_SP_DROP_FAILED                                                = 1306;                    // Failed to DROP entity
    public const ER_SP_STORE_FAILED                                               = 1307;                   // Failed to CREATE entity
    public const ER_SP_LILABEL_MISMATCH                                           = 1308;               // Error due to no matching label
    public const ER_SP_LABEL_REDEFINE                                             = 1309;                 // Redefining label
    public const ER_SP_LABEL_MISMATCH                                             = 1310;                 // End-label is missing match
    public const ER_SP_UNINIT_VAR                                                 = 1311;                     // Referring to uninitialized variable
    public const ER_SP_BADSELECT                                                  = 1312;                      // PROCEDURE can't return a result set in the given context
    public const ER_SP_BADRETURN                                                  = 1313;                      // RETURN is only allowed in a FUNCTION
    public const ER_SP_BADSTATEMENT                                               = 1314;                   // Statement is not allowed in stored procedures
    public const ER_UPDATE_LOG_DEPRECATED_IGNORED                                 = 1315;     // The update log is deprecated and replaced by the binary log; SET SQL_LOG_UPDATE has been ignored.
    public const ER_UPDATE_LOG_DEPRECATED_TRANSLATED                              = 1316;  // The update log is deprecated and replaced by the binary log; SET SQL_LOG_UPDATE has been translated to SET SQL_LOG_BIN.
    public const ER_QUERY_INTERRUPTED                                             = 1317;                 // Query execution was interrupted
    public const ER_SP_WRONG_NO_OF_ARGS                                           = 1318;               // Incorrect number of arguments
    public const ER_SP_COND_MISMATCH                                              = 1319;                  // Undefined CONDITION
    public const ER_SP_NORETURN                                                   = 1320;                       // No RETURN found in FUNCTION
    public const ER_SP_NORETURNEND                                                = 1321;                    // FUNCTION ended without RETURN
    public const ER_SP_BAD_CURSOR_QUERY                                           = 1322;               // Cursor statement must be a SELECT
    public const ER_SP_BAD_CURSOR_SELECT                                          = 1323;              // Cursor SELECT must not have INTO
    public const ER_SP_CURSOR_MISMATCH                                            = 1324;                // Undefined CURSOR
    public const ER_SP_CURSOR_ALREADY_OPEN                                        = 1325;            // Cursor is already open
    public const ER_SP_CURSOR_NOT_OPEN                                            = 1326;                // Cursor is not open
    public const ER_SP_UNDECLARED_VAR                                             = 1327;                 // Undeclared variable
    public const ER_SP_WRONG_NO_OF_FETCH_ARGS                                     = 1328;         // Incorrect number of FETCH variables
    public const ER_SP_FETCH_NO_DATA                                              = 1329;                  // No data - zero rows fetched, selected, or processed
    public const ER_SP_DUP_PARAM                                                  = 1330;                      // Duplicate parameter
    public const ER_SP_DUP_VAR                                                    = 1331;                        // Duplicate variable
    public const ER_SP_DUP_COND                                                   = 1332;                       // Duplicate condition
    public const ER_SP_DUP_CURS                                                   = 1333;                       // Duplicate cursor
    public const ER_SP_CANT_ALTER                                                 = 1334;                     // Failed to ALTER entity
    public const ER_SP_SUBSELECT_NYI                                              = 1335;                  // Subquery value not supported
    public const ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG                                 = 1336;     // Statement is not allowed in stored function or trigger
    public const ER_SP_VARCOND_AFTER_CURSHNDLR                                    = 1337;        // Variable or condition declaration after cursor or handler declaration
    public const ER_SP_CURSOR_AFTER_HANDLER                                       = 1338;           // Cursor declaration after handler declaration
    public const ER_SP_CASE_NOT_FOUND                                             = 1339;                 // Case not found for CASE statement
    public const ER_FPARSER_TOO_BIG_FILE                                          = 1340;              // Configuration file is too big
    public const ER_FPARSER_BAD_HEADER                                            = 1341;                // Malformed file type header
    public const ER_FPARSER_EOF_IN_COMMENT                                        = 1342;            // Unexpected end of file while parsing comment
    public const ER_FPARSER_ERROR_IN_PARAMETER                                    = 1343;        // Error while parsing parameter
    public const ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER                              = 1344;  // Unexpected end of file while skipping unknown parameter
    public const ER_VIEW_NO_EXPLAIN                                               = 1345;                   // EXPLAIN/SHOW can not be issued; lacking privileges for underlying table
    public const ER_WRONG_OBJECT                                                  = 1347;                      // The named object is incorrect for the type of operation attempted on it. It must be an object of the named type.
    public const ER_NONUPDATEABLE_COLUMN                                          = 1348;              // Column is not updatable
    public const ER_VIEW_SELECT_CLAUSE                                            = 1350;                // View's SELECT contains a bad clause
    public const ER_VIEW_SELECT_VARIABLE                                          = 1351;              // View's SELECT contains a variable or parameter
    public const ER_VIEW_SELECT_TMPTABLE                                          = 1352;              // View's SELECT refers to a temporary table
    public const ER_VIEW_WRONG_LIST                                               = 1353;                   // In definition of view, derived table or common table expression, SELECT list and column names list have different column counts
    public const ER_WARN_VIEW_MERGE                                               = 1354;                   // View merge algorithm can't be used here for now (assumed undefined algorithm)
    public const ER_WARN_VIEW_WITHOUT_KEY                                         = 1355;             // View being updated does not have complete key of underlying table in it
    public const ER_VIEW_INVALID                                                  = 1356;                      // View references invalid table(s) or column(s) or function(s) or definer invoker of view lack rights to use them
    public const ER_SP_NO_DROP_SP                                                 = 1357;                     // Can't drop or alter entity from within another stored routine
    public const ER_TRG_ALREADY_EXISTS                                            = 1359;                // Trigger already exists
    public const ER_TRG_DOES_NOT_EXIST                                            = 1360;                // Trigger does not exist
    public const ER_TRG_ON_VIEW_OR_TEMP_TABLE                                     = 1361;         // Trigger's object is view or temporary table
    public const ER_TRG_CANT_CHANGE_ROW                                           = 1362;               // Updating of row is not allowed in trigger
    public const ER_TRG_NO_SUCH_ROW_IN_TRG                                        = 1363;            // There is no such row in trigger
    public const ER_NO_DEFAULT_FOR_FIELD                                          = 1364;              // Field doesn't have a default value
    public const ER_DIVISION_BY_ZERO                                              = 1365;                  // Division by 0
    public const ER_TRUNCATED_WRONG_VALUE_FOR_FIELD                               = 1366;   // Incorrect field value
    public const ER_ILLEGAL_VALUE_FOR_TYPE                                        = 1367;            // Illegal value for type found during parsing
    public const ER_VIEW_NONUPD_CHECK                                             = 1368;                 // CHECK OPTION on non-updatable view
    public const ER_VIEW_CHECK_FAILED                                             = 1369;                 // CHECK OPTION failed
    public const ER_PROCACCESS_DENIED_ERROR                                       = 1370;           // Command denied to user for this routine
    public const ER_RELAY_LOG_FAIL                                                = 1371;                    // Failed purging old relay logs
    public const ER_UNKNOWN_TARGET_BINLOG                                         = 1373;             // Target log not found in binlog index
    public const ER_IO_ERR_LOG_INDEX_READ                                         = 1374;             // I/O error reading log index file
    public const ER_BINLOG_PURGE_PROHIBITED                                       = 1375;           // Server configuration does not permit binlog purge
    public const ER_FSEEK_FAIL                                                    = 1376;                        // Failed on fseek()
    public const ER_BINLOG_PURGE_FATAL_ERR                                        = 1377;            // Fatal error during log purge
    public const ER_LOG_IN_USE                                                    = 1378;                        // A purgeable log is in use, will not purge
    public const ER_LOG_PURGE_UNKNOWN_ERR                                         = 1379;             // Unknown error during log purge
    public const ER_RELAY_LOG_INIT                                                = 1380;                    // Failed initializing relay log position
    public const ER_NO_BINARY_LOGGING                                             = 1381;                 // You are not using binary logging
    public const ER_RESERVED_SYNTAX                                               = 1382;                   // Syntax is reserved for purposes internal to the MySQL server
    public const ER_PS_MANY_PARAM                                                 = 1390;                     // Prepared statement contains too many placeholders
    public const ER_KEY_PART_0                                                    = 1391;                        // Key part length cannot be 0
    public const ER_VIEW_CHECKSUM                                                 = 1392;                     // View text checksum failed
    public const ER_VIEW_MULTIUPDATE                                              = 1393;                  // Can not modify more than one base table through a join view
    public const ER_VIEW_NO_INSERT_FIELD_LIST                                     = 1394;         // Can not insert into join view without fields list
    public const ER_VIEW_DELETE_MERGE_VIEW                                        = 1395;            // Can not delete from join view
    public const ER_CANNOT_USER                                                   = 1396;                       // Operation failed
    public const ER_XAER_NOTA                                                     = 1397;                         // XAER_NOTA: Unknown XID
    public const ER_XAER_INVAL                                                    = 1398;                        // XAER_INVAL: Invalid arguments (or unsupported command)
    public const ER_XAER_RMFAIL                                                   = 1399;                       // XAER_RMFAIL: The command cannot be executed when global transaction is in current state
    public const ER_XAER_OUTSIDE                                                  = 1400;                      // XAER_OUTSIDE: Some work is done outside global transaction
    public const ER_XAER_RMERR                                                    = 1401;                        // XAER_RMERR: Fatal error occurred in the transaction branch - check your data for consistency
    public const ER_XA_RBROLLBACK                                                 = 1402;                     // XA_RBROLLBACK: Transaction branch was rolled back
    public const ER_NONEXISTING_PROC_GRANT                                        = 1403;            // There is no such grant defined for user+host on routine
    public const ER_PROC_AUTO_GRANT_FAIL                                          = 1404;              // Failed to grant EXECUTE and ALTER ROUTINE privileges
    public const ER_PROC_AUTO_REVOKE_FAIL                                         = 1405;             // Failed to revoke all privileges to dropped routine
    public const ER_DATA_TOO_LONG                                                 = 1406;                     // Data too long for column
    public const ER_SP_BAD_SQLSTATE                                               = 1407;                   // Bad SQLSTATE
    public const ER_STARTUP                                                       = 1408;                           // Server ready for connections.
    public const ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR                              = 1409;  // Can't load value from file with fixed size rows to variable
    public const ER_CANT_CREATE_USER_WITH_GRANT                                   = 1410;       // You are not allowed to create a user with GRANT
    public const ER_WRONG_VALUE_FOR_TYPE                                          = 1411;              // Incorrect value for function
    public const ER_TABLE_DEF_CHANGED                                             = 1412;                 // Table definition has changed, please retry transaction
    public const ER_SP_DUP_HANDLER                                                = 1413;                    // Duplicate handler declared in the same block
    public const ER_SP_NOT_VAR_ARG                                                = 1414;                    // OUT or INOUT argument for routine is not a variable or NEW pseudo-variable in BEFORE trigger
    public const ER_SP_NO_RETSET                                                  = 1415;                      // Not allowed to return a result set
    public const ER_CANT_CREATE_GEOMETRY_OBJECT                                   = 1416;       // Cannot get geometry object from data you send to the GEOMETRY field
    public const ER_BINLOG_UNSAFE_ROUTINE                                         = 1418;             // This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled
    public const ER_BINLOG_CREATE_ROUTINE_NEED_SUPER                              = 1419;  // You do not have the SUPER privilege and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)
    public const ER_STMT_HAS_NO_OPEN_CURSOR                                       = 1421;           // The statement has no open cursor.
    public const ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG                               = 1422;   // Explicit or implicit commit is not allowed in stored function or trigger.
    public const ER_NO_DEFAULT_FOR_VIEW_FIELD                                     = 1423;         // Field of view underlying table doesn't have a default value
    public const ER_SP_NO_RECURSION                                               = 1424;                   // Recursive stored functions and triggers are not allowed.
    public const ER_TOO_BIG_SCALE                                                 = 1425;                     // Too big scale specified for column.
    public const ER_TOO_BIG_PRECISION                                             = 1426;                 // Too-big precision specified.
    public const ER_M_BIGGER_THAN_D                                               = 1427;                   // For float(M,D), double(M,D) or decimal(M,D), M must be >= D.
    public const ER_WRONG_LOCK_OF_SYSTEM_TABLE                                    = 1428;        // You can't combine write-locking of system tables with other tables or lock types
    public const ER_CONNECT_TO_FOREIGN_DATA_SOURCE                                = 1429;    // Unable to connect to foreign data source
    public const ER_QUERY_ON_FOREIGN_DATA_SOURCE                                  = 1430;      // There was a problem processing the query on the foreign data source.
    public const ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST                              = 1431;  // The foreign data source you are trying to reference does not exist.
    public const ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE                       = 1432;      // Can't create federated table. Incorrect format for data source connection string.
    public const ER_FOREIGN_DATA_STRING_INVALID                                   = 1433;       // Incorrect format for data source connection string.
    public const ER_TRG_IN_WRONG_SCHEMA                                           = 1435;               // Trigger in wrong schema
    public const ER_SAND_SECS_USED_TOGETHER                                       = 1436;           // The option expire_logs_days and binlog_expire_logs_seconds cannot be used together. Please use binlog_expire_logs_seconds to set the expire time (expire_logs_days is deprecated)
    public const ER_REGEXP_STRING_NOT_TERMINATED                                  = 3684;      // An output string could not be zero-terminated because the length exceeds the buffer capacity.
    public const ER_REGEXP_BUFFER_OVERFLOW                                        = 3684;            // The result string is larger than the result buffer.
    public const ER_REGEXP_ILLEGAL_ARGUMENT                                       = 3685;           // Illegal argument to a regular expression.
    public const ER_REGEXP_INDEX_OUTOFBOUNDS_ERROR                                = 3686;    // Index out of bounds in regular expression search.
    public const ER_REGEXP_INTERNAL_ERROR                                         = 3687;             // Internal error in the regular expression library.
    public const ER_REGEXP_RULE_SYNTAX                                            = 3688;                // Syntax error in regular expression.
    public const ER_REGEXP_BAD_ESCAPE_SEQUENCE                                    = 3689;        // Unrecognized escape sequence in regular expression.
    public const ER_REGEXP_UNIMPLEMENTED                                          = 3690;              // The regular expression contains a feature that is not implemented in this library version.
    public const ER_REGEXP_MISMATCHED_PAREN                                       = 3691;           // Mismatched parenthesis in regular expression.
    public const ER_REGEXP_BAD_INTERVAL                                           = 3692;               // Incorrect description of a {min,max} interval.
    public const ER_REGEXP_MAX_LT_MIN                                             = 3693;                 // The maximum is less than the minumum in a {min,max} interval.
    public const ER_REGEXP_INVALID_BACK_REF                                       = 3694;           // Invalid back-reference in regular expression.
    public const ER_REGEXP_LOOK_BEHIND_LIMIT                                      = 3695;          // The look-behind assertion exceeds the limit in regular expression.
    public const ER_REGEXP_MISSING_CLOSE_BRACKET                                  = 3696;      // The regular expression contains an unclosed bracket expression.
    public const ER_REGEXP_INVALID_RANGE                                          = 3697;              // The regular expression contains an [x-y] character range where x comes after y.
    public const ER_REGEXP_STACK_OVERFLOW                                         = 3698;             // Overflow in the regular expression backtrack stack.
    public const ER_REGEXP_TIME_OUT                                               = 3699;                   // Timeout exceeded in regular expression match.
    public const ER_REGEXP_PATTERN_TOO_BIG                                        = 3700;            // SQLSTn attribute error
    public const ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED                                = 3981;    // Storage engine does not support ENGINE_ATTRIBUTE.
    public const ER_INVALID_USER_ATTRIBUTE_JSON                                   = 3982;       // The user attribute must be a valid JSON object
    public const ER_INNODB_REDO_DISABLED                                          = 3983;              // Cannot perform operation as InnoDB redo logging is disabled. Please retry after enabling redo log with ALTER INSTANCE
    public const ER_INNODB_REDO_ARCHIVING_ENABLED                                 = 3984;     // Cannot perform operation as InnoDB is archiving redo log. Please retry after stopping redo archive by invoking innodb_redo_log_archive_stop()
    public const ER_MDL_OUT_OF_RESOURCES                                          = 3985;              // Not enough resources to complete lock request.
    public const ER_IMPLICIT_COMPARISON_FOR_JSON                                  = 3986;      // Evaluating a JSON value in SQL boolean context does an implicit comparison against JSON integer 0; if this is not what you want, consider converting JSON to a SQL numeric type with JSON_VALUE RETURNING
    public const ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET                       = 3987;      // The function does not support the character set.
    public const ER_IMPOSSIBLE_STRING_CONVERSION                                  = 3988;           // Collation conversion impossible.
    public const ER_SCHEMA_READ_ONLY                                              = 3989;                       // Schema is in read only mode.
    public const ER_RPL_ASYNC_RECONNECT_GTID_MODE_OFF                             = 3990;      // Failed to enable Asynchronous Replication Connection Failover feature. The CHANGE MASTER TO SOURCE_CONNECTION_AUTO_FAILOVER = 1 can only be set when @@GLOBAL.GTID_MODE = ON.
    public const ER_RPL_ASYNC_RECONNECT_AUTO_POSITION_OFF                         = 3991;  // Failed to enable Asynchronous Replication Connection Failover feature. The CHANGE MASTER TO SOURCE_CONNECTION_AUTO_FAILOVER = 1 can only be set when MASTER_AUTO_POSITION option of CHANGE MASTER TO is enabled.
    public const ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF                = 3992;      // The @@GLOBAL.GTID_MODEcannot be changed because Asynchronous Replication Connection Failover is enabled.
    public const ER_DISABLE_AUTO_POSITION_REQUIRES_ASYNC_RECONNECT_OFF            = 3993;  // CHANGE MASTER TO MASTER_AUTO_POSITION = 0 cannot be executed because Asynchronous Replication Connection Failover is enabled.
    public const ER_INVALID_PARAMETER_USE                                         = 3994;                  // Invalid use of parameters.
    public const ER_CHARACTER_SET_MISMATCH                                        = 3995;                 // Character set mismatch.
    public const ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED                           = 3996;    // Changing variable not supported on this platform. Falling back to the default.
    public const ER_INVALID_TIME_ZONE_INTERVAL                                    = 3997;             // Invalid time zone interval.
    public const ER_INVALID_CAST                                                  = 3998;                           // Cannot cast value.
    public const ER_HYPERGRAPH_NOT_SUPPORTED_YET                                  = 3999;           // The hypergraph optimizer does not yet support that.
    public const ER_WARN_HYPERGRAPH_EXPERIMENTAL                                  = 4000;           // The hypergraph optimizer is highly experimental and is meant for testing only. Do not enable it unless you are a MySQL developer.
    public const ER_DA_NO_ERROR_LOG_PARSER_CONFIGURED                             = 4001;      // None of the log-sinks selected with --log-error-services=... provides a log-parser. The server will not be able to make the previous runs' error-logs available in performance_schema.error_log.
    public const ER_DA_ERROR_LOG_TABLE_DISABLED                                   = 4002;            // None of the log-sinks selected in @@global.log_error_services supports writing to the performance schema. The server will not be able to make the current runs' error events available in performance_schema.error_log. To change this, add a log-sink that supports the performance schema to @@global.log_error_services.
    public const ER_DA_ERROR_LOG_MULTIPLE_FILTERS                                 = 4003;          // @@global.log_error_services lists more than one log-filter service. This is discouraged as it will make it hard to understand which rule in which filter affected a log-event.
    public const ER_DA_CANT_OPEN_ERROR_LOG                                        = 4004;                 // Could not open file for error logging.
    public const ER_USER_REFERENCED_AS_DEFINER                                    = 4005;             // User is referenced as a definer account.
    public const ER_CANNOT_USER_REFERENCED_AS_DEFINER                             = 4006;      // Operation failed as it is referenced as a definer account.
    public const ER_REGEX_NUMBER_TOO_BIG                                          = 4007;                   // Decimal number in regular expression is too large.
    public const ER_SPVAR_NONINTEGER_TYPE                                         = 4008;                  // Variable has a non-integer based type.
    public const WARN_UNSUPPORTED_ACL_TABLES_READ                                 = 4009;          // Reads with serializable isolation/SELECT FOR SHARE are not supported for ACL tables.
    public const ER_BINLOG_UNSAFE_ACL_TABLE_READ_IN_DML_DDL                       = 4010;  // The statement is unsafe because it updates a table depending on ACL table read operation. As storage engine row locks are skipped for ACL table, it may not have same effect on master and slave.
    public const ER_STOP_REPLICA_MONITOR_IO_THREAD_TIMEOUT                        = 4011; // STOP REPLICA command execution is incomplete: Replica Monitor thread got the stop signal, thread is busy, Monitor thread will stop once the current task is complete.
    public const ER_STARTING_REPLICA_MONITOR_IO_THREAD                            = 4012;     // The Replica Monitor thread failed to start.
    public const ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON              = 4013;      // Replication cannot start with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID> as this server uses @@GLOBAL.GTID_MODE <> ON.
    public const ER_CANT_COMBINE_ANONYMOUS_TO_GTID_AND_AUTOPOSITION               = 4014;      // The options ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID> and MASTER_AUTO_POSITION = 1 cannot be used together.
    public const ER_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_REQUIRES_GTID_MODE_ON  = 4015;      // CHANGE MASTER TO ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID> cannot be executed because @@GLOBAL.GTID_MODE <> ON.
    public const ER_SQL_SLAVE_SKIP_COUNTER_USED_WITH_GTID_MODE_ON                 = 4016;      // The value of sql_slave_skip_counter will only take effect for channels running with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS <> OFF.
    public const ER_SQL_REPLICA_SKIP_COUNTER_USED_WITH_GTID_MODE_ON               = 4016;      // The value of sql_replica_skip_counter will only take effect for channels running with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS <> OFF.
    public const ER_USING_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_AS_LOCAL_OR_UUID = 4017;      // Using ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS creates limitations on the replication topology - you cannot fail over between downstream and upstream servers. Only use this option if it is not possible to enable GTIDs on the source, for instance, because of lack of permissions. If possible, use the procedure for enabling GTID transactions online instead, as described in the documentation.
    public const ER_CANT_SET_ANONYMOUS_TO_GTID_AND_WAIT_UNTIL_SQL_THD_AFTER_GTIDS = 4018;      // WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS cannot be used on a channel configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID>
    public const ER_CANT_SET_SQL_AFTER_OR_BEFORE_GTIDS_WITH_ANONYMOUS_TO_GTID     = 4019;      // The SQL_AFTER_GTIDS or SQL_BEFORE_GTIDS clauses for START REPLICA cannot be used when the replication channel is configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID>.
    public const ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME                     = 4020;      // Replication is configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = <UUID> where the UUID value is equal to the group_replication_group_name
    public const ER_CANT_USE_SAME_UUID_AS_GROUP_NAME                              = 4021;       // CHANGE MASTER TO ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = <UUID> cannot be executed because the UUID value is equal to the group_replication_group_name.
    public const ER_GRP_RPL_RECOVERY_CHANNEL_STILL_RUNNING                        = 4022; // The group_replication_recovery channel is still running, most likely it is waiting for a database/table lock, which is preventing the channel from stopping. Please check database/table locks, including the ones created by backup tools.
    public const ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE                          = 4023;   // AUTOEXTEND_SIZE invalid.
    public const ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE                           = 4024;    // InnoDB: problem when using general tablespaces
    public const ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE                           = 4025;    // AUTOEXTEND_SIZE value out-of-range.
    public const ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE                             = 4026;      // AUTOEXTEND_SIZE clause is not valid for this tablespace.
    public const ER_ROLE_GRANTED_TO_ITSELF                                        = 4027;                 // User account is directly or indirectly granted to the role. The GRANT would create a loop.
    public const ER_TABLE_MUST_HAVE_A_VISIBLE_COLUMN                              = 4028;       // A table must have at least one visible column.
    public const ER_INNODB_COMPRESSION_FAILURE                                    = 4029;             // Compression failed.
    public const ER_WARN_ASYNC_CONN_FAILOVER_NETWORK_NAMESPACE                    = 4030;      // The parameter network_namespace is reserved for future use. Please use the CHANGE REPLICATION SOURCE command to set channel network_namespace parameter.
    public const ER_CLIENT_INTERACTION_TIMEOUT                                    = 4031;             // The client was disconnected by the server because of inactivity. See wait_timeout and interactive_timeout for configuring this behavior.
    public const ER_INVALID_CAST_TO_GEOMETRY                                      = 4032;               // Invalid cast to geometry.
    public const ER_INVALID_CAST_POLYGON_RING_DIRECTION                           = 4033;    // Invalid cast to polygon. A polygon ring is in the wrong direction.
    public const ER_GIS_DIFFERENT_SRIDS_AGGREGATION                               = 4034;        // Arguments to function contains geometries with different SRIDs. All geometries must have the same SRID.
    public const ER_RELOAD_KEYRING_FAILURE                                        = 4035;                 // Keyring reload failed. Please check error log for more details.
    public const ER_SDI_GET_KEYS_INVALID_TABLESPACE                               = 4036;        // Tablespace is invalid for SDI operations.
    public const ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE               = 4037;  // Value too long for SOURCE_COMPRESSION_ALGORITHMS option for this channel.
    public const ER_WARN_DEPRECATED_TLS_VERSION_FOR_CHANNEL_CLI                   = 4038;      // A deprecated TLS version is enabled for this channel. Please use TLSv1.2 or higher.
    public const ER_CANT_USE_SAME_UUID_AS_VIEW_CHANGE_UUID                        = 4039;           // CHANGE REPLICATION SOURCE TO ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = <UUID> cannot be executed because the UUID value is equal to the group_replication_view_change_uuid.
    public const ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID               = 4040;  // Replication is configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = <UUID> where the UUID value is equal to the group_replication_view_change_uuid
    public const ER_GRP_RPL_VIEW_CHANGE_UUID_FAIL_GET_VARIABLE                    = 4041;       // Unable to retrieve group_replication_view_change_uuid variable during server checks on replication operations.
    public const ER_WARN_ADUIT_LOG_MAX_SIZE_AND_PRUNE_SECONDS                     = 4042;        // Both audit_log_max_size and audit_log_prune_seconds are set to non-zero. audit_log_max_size takes precedence and audit_log_prune_seconds is ignored
    public const ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE               = 4043;  // audit_log_rotate_on_size is not granular enough for the value of audit_log_max_size supplied.
    public const ER_KERBEROS_CREATE_USER                                          = 4044;                   // Create/Alter user has failed, Configured user realm as authentication string is empty, Please make sure to configure authentication string as user realm.
    public const ER_INSTALL_PLUGIN_CONFLICT_CLIENT                                = 4045;         // Cannot install plugin due to conflict with an installed plugin.
    public const ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED                           = 4046;    // Error logging component(s) failed to flush.
    public const ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED                    = 4047;       // The until clause SQL_AFTER_MTS_GAPS is being used for this channel when GTID_MODE = ON and SOURCE_AUTO_POSITION=1 meaning the server did not compute internally what gaps may exist in the relay log transaction execution.
    public const ER_OPERATION_NOT_ALLOWED_ON_GR_SECONDARY                         = 4048;  // This operation cannot be performed on a Group Replication secondary member, it must be done on the group primary.
    public const ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION                   = 4049;      // Unable to propagate the SOURCE_CONNECTION_AUTO_FAILOVER value for this channel to group replication members. Please retry the operation.

    // Client errors
    public const CR_UNKNOWN_ERROR                         = 2000;                     //  Unknown MySQL error
    public const CR_SOCKET_CREATE_ERROR                   = 2001;               //  Can't create UNIX socket
    public const CR_CONNECTION_ERROR                      = 2002;                  //  Can't connect to local MySQL server through socket
    public const CR_CONN_HOST_ERROR                       = 2003;                   //  Can't connect to MySQL server
    public const CR_IPSOCK_ERROR                          = 2004;                      //  Can't create TCP/IP socket
    public const CR_UNKNOWN_HOST                          = 2005;                      //  Unknown MySQL server host
    public const CR_SERVER_GONE_ERROR                     = 2006;                 //  MySQL server has gone away
    public const CR_VERSION_ERROR                         = 2007;                     //  Protocol mismatch.
    public const CR_OUT_OF_MEMORY                         = 2008;                     //  MySQL client run out of memory
    public const CR_WRONG_HOST_INFO                       = 2009;                   //  Wrong host info
    public const CR_LOCALHOST_CONNECTION                  = 2010;              //  Localhost via UNIX socket
    public const CR_TCP_CONNECTION                        = 2011;                    //  Connection via TCP/IP
    public const CR_SERVER_HANDSHAKE_ERR                  = 2012;              //  Error in server handshake
    public const CR_SERVER_LOST                           = 2013;                       //  Lost connection to MySQL server during query
    public const CR_COMMANDS_OUT_OF_SYNC                  = 2014;              //  Commands out of sync; you can't run this command now
    public const CR_NAMEDPIPE_CONNECTION                  = 2015;              //  Connection via named pipe
    public const CR_NAMEDPIPEWAIT_ERROR                   = 2016;               //  Can't wait for named pipe to host
    public const CR_NAMEDPIPEOPEN_ERROR                   = 2017;               //  Can't open named pipe to host
    public const CR_NAMEDPIPESETSTATE_ERROR               = 2018;           //  Can't set state of named pipe
    public const CR_CANT_READ_CHARSET                     = 2019;                 //  Can't initialize character set
    public const CR_NET_PACKET_TOO_LARGE                  = 2020;              //  Got packet bigger than 'max_allowed_packet'
    public const CR_EMBEDDED_CONNECTION                   = 2021;
    public const CR_PROBE_SLAVE_STATUS                    = 2022;
    public const CR_PROBE_SLAVE_HOSTS                     = 2023;
    public const CR_PROBE_SLAVE_CONNECT                   = 2024;
    public const CR_PROBE_MASTER_CONNECT                  = 2025;
    public const CR_SSL_CONNECTION_ERROR                  = 2026;              //  SSL connection error
    public const CR_MALFORMED_PACKET                      = 2027;                  //  received malformed packet
    public const CR_WRONG_LICENSE                         = 2028;
    public const CR_NULL_POINTER                          = 2029;                      //  Null pointer
    public const CR_NO_PREPARE_STMT                       = 2030;                   //  Statement is not prepared
    public const CR_PARAMS_NOT_BOUND                      = 2031;                  //  No data supplied for parameters in prepared statement
    public const CR_DATA_TRUNCATED                        = 2032;                    //  Data truncated
    public const CR_NO_PARAMETERS_EXISTS                  = 2033;              //  No parameters exist
    public const CR_INVALID_PARAMETER_NO                  = 2034;              //  Invalid parameter number
    public const CR_INVALID_BUFFER_USE                    = 2035;                //  Invalid buffer type
    public const CR_UNSUPPORTED_PARAM_TYPE                = 2036;            //  Buffer type is not supported
    public const CR_SHARED_MEMORY_CONNECTION              = 2037;                 //  Shared memory connected
    public const CR_SHARED_MEMORY_CONNECT_REQUEST_ERROR   = 2038;      //  Shared memory connection failed
    public const CR_SHARED_MEMORY_CONNECT_ANSWER_ERROR    = 2039;
    public const CR_SHARED_MEMORY_CONNECT_FILE_MAP_ERROR  = 2040;
    public const CR_SHARED_MEMORY_CONNECT_MAP_ERROR       = 2041;
    public const CR_SHARED_MEMORY_FILE_MAP_ERROR          = 2042;
    public const CR_SHARED_MEMORY_MAP_ERROR               = 2043;
    public const CR_SHARED_MEMORY_EVENT_ERROR             = 2044;
    public const CR_SHARED_MEMORY_CONNECT_ABANDONED_ERROR = 2045;
    public const CR_SHARED_MEMORY_CONNECT_SET_ERROR       = 2046;
    public const CR_CONN_UNKNOW_PROTOCOL                  = 2047;              //  Wrong or unknown protocol
    public const CR_INVALID_CONN_HANDLE                   = 2048;               //  Invalid connection handle
    public const CR_SECURE_AUTH                           = 2049;                       //  Connection with old authentication protocol refused.
    public const CR_FETCH_CANCELED                        = 2050;                    //  Fetch cancelled
    public const CR_NO_DATA                               = 2051;                           //  No data
    public const CR_NO_STMT_METADATA                      = 2052;                  //  Prepared statement contains no metadata
    public const CR_NO_RESULT_SET                         = 2053;                     //  No result set
    public const CR_NOT_IMPLEMENTED                       = 2054;                   //  This feature is not implemented or disabled
    public const CR_SERVER_LOST_EXTENDED                  = 2055;              //  Lost connection to MySQL server
    public const CR_STMT_CLOSED                           = 2056;                       //  Server closed statement due to a prior function call
    public const CR_NEW_STMT_METADATA                     = 2057;                 //  The number of parameters in bound buffers differs from number of columns in resultset
    public const CR_ALREADY_CONNECTED                     = 2058;                 //  Can't connect twice. Already connected
    public const CR_AUTH_PLUGIN_CANNOT_LOAD               = 2059;           //  Plugin could not be loaded
    public const CR_DUPLICATE_CONNECTION_ATTR             = 2060;         //  An attribute with same name already exists
    public const CR_AUTH_PLUGIN_ERR                       = 2061;                   //  Plugin doesn't support this function

// MariaDB client errors
    public const CR_EVENT_CREATE_FAILED     = 5000;               // Creating an event failed
    public const CR_BIND_ADDR_FAILED        = 5001;                  // Bind to local interface failed
    public const CR_ASYNC_NOT_SUPPORTED     = 5002;               // Connection type doesn't support asynchronous IO operations
    public const CR_FUNCTION_NOT_SUPPORTED  = 5003;            // Server doesn't support function
    public const CR_FILE_NOT_FOUND          = 5004;                    // File not found
    public const CR_FILE_READ               = 5005;                         // Error reading file
    public const CR_BULK_WITHOUT_PARAMETERS = 5006;           // Bulk operation without parameters is not supported
    public const CR_INVALID_STMT            = 5007;                      // Invalid statement handle
    public const CR_VERSION_MISMATCH        = 5008;                  // Unsupported version
}
